name: Pipeline de CI/CD
on:
  push:
    branches:
      - main
env:
  AWS_REGION: 'eu-west-1'
  application_folder: ScooterJeeAPI

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        name: Checkout Repository

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test with Maven
        run: mvn -B test --file pom.xml
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
#      Ajoute les valeurs dans le fichier application.properties
      - name: Create and populate application.properties
        run: |
          echo open_cages.token="$OPEN_CAGES_TOKEN" >> ${{ env.PROPERTIES_FILE }}
          echo spring.datasource.url="$AWS_DB" >> ${{ env.PROPERTIES_FILE }}
          echo spring.datasource.username="$AWS_DB_USER" >> ${{ env.PROPERTIES_FILE }}
          echo spring.datasource.password="$AWS_DB_PASSWORD" >> ${{ env.PROPERTIES_FILE }}
          echo server.port=5000 >> ${{ env.PROPERTIES_FILE }}
          echo spring.jpa.hibernate.ddl-auto= update >> ${{ env.PROPERTIES_FILE }}
          echo spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5Dialect >> ${{ env.PROPERTIES_FILE }}
        shell: bash
        env:
          PROPERTIES_FILE: './src/main/resources/application.properties'
          OPEN_CAGES_TOKEN: ${{ secrets.OPEN_CAGES_TOKEN }}
          AWS_DB: ${{ secrets.AWS_DB }}
          AWS_DB_USER: ${{ secrets.AWS_DB_USER }}
          AWS_DB_PASSWORD: ${{ secrets.AWS_DB_PASSWORD }}
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/scooter-jee.jar

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: Scooter-jee
          environment_name: Scooter-JEE-env
          version_label: ${{github.SHA}}
          region: ${{ env.AWS_REGION }}
          deployment_package: scooter-jee.jar